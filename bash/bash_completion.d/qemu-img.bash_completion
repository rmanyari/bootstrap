# bash completion for openstack keystone

_qemu_completions()
{
    case $1 in
        create)
		    COMPREPLY=($(compgen -W "-f -o" -- ${cur}))
            ;;
        snapshot)
            if [ -n "$2" ] ; then
                _list_images
                return 0
            fi
            case $cur in
                -a|-l|-c|-d)
                    #echo "NOW"
                    _list_images
                    return 0
                ;;
                *)
                    opts="-a -l -c -d"
                    if [[ ${cur} == -* ]] ; then
                        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
                        return 0
                    #echo "completions prev - ${prev}"
                    #if [[ ${cur} == -* ]] ; then
                        #COMPREPLY=($(compgen -W "-walker -a -l -c -d" -- ${cur}))
                    elif [[ $COMP_CWORD -eq 1 ]] ; then
                            _list_images
                            return 0
                    else
                        COMPREPLY=($(compgen -W "-tony -a -l -c -d" -- ${cur}))
                        return 0
                    fi
                ;;
            esac
        ;;
    esac
}

_list_images()
{
    IMAGE_DIR="/apps/images"
    images=$(ls ${IMAGE_DIR}/*.img 2>/dev/null)
    if [ -n "$images" ] ; then
        for image in $images ; do
            COMPREPLY=( ${COMPREPLY[@]} $image )
        done
    fi
    COMPREPLY=($(compgen -W '${COMPREPLY[@]}' -- "$cur" ))
}

_qemu_img()
{
	local cur prev
	COMPREPLY=()
	cur="${COMP_WORDS[COMP_CWORD]}"
	prev="${COMP_WORDS[COMP_CWORD-1]}"
    snap_opts="-a|-l|-c|-d"

    case $prev in
        create|snapshot)
            #echo "COMP - $COMP_CWORD"
            _qemu_completions $prev
        ;;
		*)
            if [[ $COMP_CWORD -eq 1 ]] ; then
                #echo "COMP - $COMP_CWORD"
                #echo "prev - ${prev}"
                COMPREPLY=($(compgen -W "create snapshot" -- ${cur}))
            else
                if [[ ${prev} =~ $snap_opts ]] ; then
                    _qemu_completions snapshot $prev
                fi
                #echo "And now ${COMP_WORDS[COMP_CWORD-2]}"
                #echo "And prev ${prev}"
            fi
        ;;
    esac
}
complete -F _qemu_img qemu-img
